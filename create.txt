--The following script contains 
--the SQL DDL to create the tables, 
--constraints, and stored procedures.
--CREATE TABLE PRODUCT_RECORD
CREATE TABLE PRODUCT_RECORD
(
PRODUCT_ID DECIMAL(12) PRIMARY KEY,
NAME VARCHAR(256),
DESCRIPTION VARCHAR(256),
PRICE DECIMAL(12),
CATEGORY_ID DECIMAL(12),
INVENTORY_ID DECIMAL(12)
);

--CREATE TABLE SELLER_RECORD
CREATE TABLE SELLER_RECORD
(
SELLER_ID DECIMAL(12) PRIMARY KEY,
FIRST_NAME VARCHAR(64),
LAST_NAME VARCHAR(64)
);

--CREATE TABLE PRODUCT_CONDITION_RECORD
CREATE TABLE PRODUCT_CONDITION_RECORD
(
CONDITION_ID DECIMAL(12) PRIMARY KEY,
CONDITION_TYPE VARCHAR(256),
PRODUCT_ID DECIMAL(12),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_RECORD(PRODUCT_ID)
);

--CREATE TABLE INVENTORY_RECORD
CREATE TABLE INVENTORY_RECORD
(
INVENTORY_ID DECIMAL(12) PRIMARY KEY,
INVENTORY_TYPE VARCHAR(256),
SELLER_ID DECIMAL(12) NOT NULL,
CONDITION_ID DECIMAL(12) NOT NULL,
ORDER_DETAILS_ID DECIMAL(12),
FOREIGN KEY (SELLER_ID) REFERENCES SELLER_RECORD(SELLER_ID),
FOREIGN KEY (CONDITION_ID) REFERENCES PRODUCT_CONDITION_RECORD(CONDITION_ID)
);

--CREATE TABLE CATEGORY_RECORD
CREATE TABLE CATEGORY_RECORD
(
CATEGORY_ID DECIMAL(12) PRIMARY KEY,
CATEGORY_TYPE VARCHAR(256)
);

--CREATE TABLE SHIPPING_TYPE_RECORD
CREATE TABLE SHIPPING_TYPE_RECORD
(
SHIPPING_ID DECIMAL(12) PRIMARY KEY,
SHIPPING_TYPE VARCHAR(256)
);

--CREATE TABLE ADDRESS_RECORD
CREATE TABLE ADDRESS_RECORD
(
ADDRESS_ID DECIMAL(12) PRIMARY KEY,
ADDRESS VARCHAR(256),
ZIP_CODE DECIMAL(12)
);

--CREATE TABLE CUSTOMER_RECORD
CREATE TABLE CUSTOMER_RECORD
(
CUSTOMER_ID DECIMAL(12) PRIMARY KEY,
EMAIL_ID VARCHAR(256),
CUSTOMER_FNAME VARCHAR(256),
CUSTOMER_LNAME VARCHAR(256),
ADDRESS_ID DECIMAL(12) NOT NULL,
FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS_RECORD(ADDRESS_ID)
);

--CREATE TABLE ORDER_RECORD
CREATE TABLE ORDER_RECORD
(
ORDER_ID DECIMAL(12) PRIMARY KEY,
ORDER_TYPE VARCHAR(256),
SHIPPING_ID DECIMAL(12) NOT NULL,
CUSTOMER_ID DECIMAL(12) NOT NULL,
FOREIGN KEY (SHIPPING_ID) REFERENCES SHIPPING_TYPE_RECORD(SHIPPING_ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_RECORD(CUSTOMER_ID)
);

--CREATE TABLE ORDER_DETAIL_RECORD
CREATE TABLE ORDER_DETAIL_RECORD
(
ORDER_DETAILS_ID DECIMAL(12) PRIMARY KEY,
DETAIL_TYPE VARCHAR(256),
ORDER_ID DECIMAL(12) NOT NULL,
INVENTORY_ID DECIMAL(12) NOT NULL,
FOREIGN KEY (ORDER_ID) REFERENCES ORDER_RECORD(ORDER_ID),
FOREIGN KEY (INVENTORY_ID) REFERENCES INVENTORY_RECORD(INVENTORY_ID)
);

--ALTER TABLES
ALTER TABLE PRODUCT_RECORD
ADD CONSTRAINT category_id_fk
FOREIGN KEY (CATEGORY_ID)
REFERENCES CATEGORY_RECORD (CATEGORY_ID);

ALTER TABLE PRODUCT_RECORD
ADD CONSTRAINT inventory_id_fk
FOREIGN KEY (INVENTORY_ID)
REFERENCES INVENTORY_RECORD (INVENTORY_ID);


ALTER TABLE INVENTORY_RECORD
ADD CONSTRAINT order_details_id_fk
FOREIGN KEY (ORDER_DETAILS_ID)
REFERENCES ORDER_DETAIL_RECORD (ORDER_DETAILS_ID);

ALTER TABLE PRODUCT_CONDITION_RECORD
DROP COLUMN PRODUCT_ID
CASCADE CONSTRAINTS;


ALTER TABLE INVENTORY_RECORD
DROP COLUMN ORDER_DETAILS_ID
CASCADE CONSTRAINTS;

--CREATING STORED PROCEDURES AND INSERTING DATA
create or replace PROCEDURE ADD_PRODUCT_RECORD(
product_id_arg IN DECIMAL,
name_arg IN VARCHAR,
description_arg IN VARCHAR, 
price_arg IN DECIMAL,
category_id_arg IN DECIMAL,
inventory_id_arg IN DECIMAL
)
IS 
BEGIN 
INSERT INTO PRODUCT_RECORD(PRODUCT_ID, NAME, DESCRIPTION, PRICE, CATEGORY_ID,INVENTORY_ID)
VALUES (product_id_arg,name_arg,description_arg,price_arg,category_id_arg,inventory_id_arg);
END;


BEGIN
ADD_PRODUCT_RECORD(07,'PUMA SHOE','FUN_NEON',1090,001,998);
END;
/


INSERT INTO CATEGORY_RECORD(CATEGORY_ID, CATEGORY_TYPE)
VALUES(001,'BOYS_SHOES');



INSERT INTO SELLER_RECORD(SELLER_ID, FIRST_NAME, LAST_NAME)
VALUES(1,'JORDAN','MAXFELL');


INSERT INTO PRODUCT_CONDITION_RECORD(CONDITION_ID, CONDITION_TYPE)
VALUES(011,'NEW');


BEGIN
ADD_PRODUCT_RECORD(08,'PUMA_BLACK_SHOE','FUN_RUN',1890,001,0101);
add_product_record(02,'PUMA_ATHLETE','SMART_RUN',8870,001,0101);
END;
/

create or replace PROCEDURE ADD_PRODUCT_CONDITION_RECORD(
CONDITION_ID_ARG IN DECIMAL,
CONDITION_TYPE_ARG IN VARCHAR
)
IS 
BEGIN 
INSERT INTO PRODUCT_CONDITION_RECORD(CONDITION_ID, CONDITION_TYPE)
VALUES (CONDITION_ID_ARG,CONDITION_TYPE_ARG);
END;


create or replace PROCEDURE ADD_INVENTORY_RECORD(
INVENTORY_ID_ARGS DECIMAL,
INVENTORY_TYPE_ARGS VARCHAR,
SELLER_ID_ARGS DECIMAL,
CONDITION_ID_ARGS DECIMAL
)
IS 
BEGIN 
INSERT INTO INVENTORY_RECORD(INVENTORY_ID,INVENTORY_TYPE,SELLER_ID,CONDITION_ID)
VALUES (INVENTORY_ID_ARGS,INVENTORY_TYPE_ARGS,SELLER_ID_ARGS,CONDITION_ID_ARGS);
END;

create or replace PROCEDURE ADD_CATEGORY_RECORD(
CATEGORY_ID_ARG IN DECIMAL,
CATEGORY_TYPE_ARG IN VARCHAR
)
IS 
BEGIN 
INSERT INTO CATEGORY_RECORD(CATEGORY_ID, CATEGORY_TYPE)
VALUES (CATEGORY_ID_ARG,CATEGORY_TYPE_ARG);
END;

create or replace PROCEDURE ADD_ORDER_DETAIL_RECORD(
ORDER_DETAILS_ID_ARGS DECIMAL,
DETAIL_TYPE_ARGS VARCHAR,
ORDER_ID_ARGS DECIMAL,
INVENTORY_ID_ARGS DECIMAL
)
IS 
BEGIN 
INSERT INTO ORDER_DETAIL_RECORD(ORDER_DETAILS_ID,DETAIL_TYPE,ORDER_ID,INVENTORY_ID)
VALUES (ORDER_DETAILS_ID_ARGS,DETAIL_TYPE_ARGS,ORDER_ID_ARGS,INVENTORY_ID_ARGS);
END;

create or replace PROCEDURE ADD_ORDER_RECORD(
ORDER_ID_ARGS DECIMAL,
ORDER_TYPE_ARGS VARCHAR,
CUSTOMER_ID_ARGS DECIMAL,
SHIPPING_ID_ARGS DECIMAL
)
IS 
BEGIN 
INSERT INTO ORDER_RECORD(ORDER_ID,ORDER_TYPE,CUSTOMER_ID,SHIPPING_ID)
VALUES (ORDER_ID_ARGS,ORDER_TYPE_ARGS,CUSTOMER_ID_ARGS,SHIPPING_ID_ARGS);
END;

create or replace PROCEDURE ADD_SHIPPING_TYPE_RECORD(
SHIPPING_ID_ARG IN DECIMAL,
SHIPPING_TYPE_ARG IN VARCHAR
)
IS 
BEGIN 
INSERT INTO SHIPPING_TYPE_RECORD(SHIPPING_ID, SHIPPING_TYPE)
VALUES (SHIPPING_ID_ARG,SHIPPING_TYPE_ARG);
END;

create or replace PROCEDURE ADD_PACKAGE_RECORD(
PACKAGE_ID_ARGS IN DECIMAL,
DELIVERY_ADDRESS_ARGS IN VARCHAR,
ORDER_ID_ARGS IN DECIMAL
)
IS 
BEGIN 
INSERT INTO PACKAGE_RECORD(PACKAGE_ID, DELIVERY_ADDRESS,ORDER_ID )
VALUES (PACKAGE_ID_ARGS,DELIVERY_ADDRESS_ARGS ,ORDER_ID_ARGS);
END;

create or replace PROCEDURE ADD_ADDRESS_RECORD(
ADDRESS_ID_ARGS IN DECIMAL,
ADDRESS_ARGS IN VARCHAR,
ZIP_CODE_ARGS IN DECIMAL
)
IS 
BEGIN 
INSERT INTO ADDRESS_RECORD(ADDRESS_ID,ADDRESS ,ZIP_CODE)
VALUES (ADDRESS_ID_ARGS,ADDRESS_ARGS ,ZIP_CODE_ARGS);
END;

create or replace PROCEDURE ADD_CUSTOMER_RECORD(
CUSTOMER_ID_ARGS IN DECIMAL,
EMAIL_ID_ARGS IN VARCHAR,
CUSTOMER_FNAME_ARGS IN VARCHAR,
CUSTOMER_LNAME_ARGS IN VARCHAR,
ADDRESS_ID_ARGS IN VARCHAR
)
IS 
BEGIN 
INSERT INTO CUSTOMER_RECORD(CUSTOMER_ID, EMAIL_ID, CUSTOMER_FNAME, CUSTOMER_LNAME, ADDRESS_ID)
VALUES (CUSTOMER_ID_ARGS,EMAIL_ID_ARGS,CUSTOMER_FNAME_ARGS,CUSTOMER_LNAME_ARGS,ADDRESS_ID_ARGS);
END;

